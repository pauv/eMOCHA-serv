{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1440\margr1440\vieww21700\viewh17220\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Setting up a new app:\
\
DATABASE:\
Import database (install/db_setup.sql) to MySQL. This contains the table structure.\
\
FILES:\
Add the files on your server. There are different ways to structure a Kohana application. In our set-up we place all the files inside our webroot and have our applications running in subdirectories. This allows us to run multiple application version on the same webserver using the same core module. Eg. http://server.org/app1, http://server.org/app2, etc.\
The set-up files include only one application subdirectory called 'emocha'. If you wanted to run more versions you could duplicate this folder. The following instructions assume you keep to this structure. If you want to structure your project differently, have a look at the kohana documentation (http://kohanaframework.org/3.0/guide/kohana/) and bear in mind you will have to edit your .htaccess and bootstrap.php files differently.\
\
\
.htaccess files:\
- The 'emocha' folder contains an .htaccess file that you can leave as is, if you keep the same folder stucture and names. Otherwise you'll need to change the 'RewriteBase' variable.\
- if the other system and modules folders are in the web root then you may want to add an .htaccess there to prevent direct access to these folders.\
\
Bootstrap file:\
/emocha/bootstrap.php (edit the base_url of your application)\
\
\
Cache/log files:\
/emocha/cache and /emocha/logs need to be writeable by php\
\
\
CONFIGURATION:\
Kohana Config files:\
Note these can either be in your /modules/emocha/config folder or your /emocha/config folder. Those in 'emocha' are application specific, those in the modules can be shared by different applications if you have multiple versions.\
\
database.php (edit the database details)\
auth.php (edit salt pattern so your auth salt is unique)\
email.php (edit email sending server settings)\
emocha.php (edit email alert recipient and some other app specific things)\
googlemaps.php (edit client key from  http://code.google.com/apis/maps/signup.html)\
encryption.php (edit AES encryption key for sensitive DB data)\
api.php (edit authentication to usr_password or usr_only)\
sms.php (enter clicakatell api details if you have them)\
\
\
SDCARD:\
There is a folder called /emocha/sdcard with following subdirectories:\
./emocha\
./emocha/odk\
./emocha/odk/custom-resources\
./emocha/odk/form_files\
./emocha/odk/forms\
./emocha/patient_files\
./emocha/training\
./emocha/training/courses\
./emocha/training/lectures\
./emocha/training/library\
./upload\
All need to be writable by php scripts\
./upload needs to be writable by php and also ftp/sftp (this is used for uploading big files to the media area)\
\
\
FINAL SETUP:\
Test the app:\
Go to e.g. http://server.org/emocha\
\
First user:\
An initial user will need to be created (manually in part).\
- sign up via the application register page\
- manually set the user data in the users table of the database: both 'activated' and 'confirmed' should be '1'.\
- manually give the user an admin role (insert user id=? and role id=2 into the roles_users table)\
The user should now be able to log in and have admin permissions. From now on you can administer other users via the application.\
\
\
\
}